{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["formatDate","date","moment","Date","tz","format","App","useState","showMainModal","setShowMainModal","showLoginForm","setShowLoginForm","JSON","parse","localStorage","getItem","loginData","setLoginData","modalData","setModalData","formData","setFormData","userData","setUserData","window","location","search","substr","length","useEffect","localStorageObject","auth","clentName","lname","fname","clentId","id","setItem","stringify","loadUserData","a","console","log","axios","res","errors","data","handleCloseSubModal","callback","handleClose","style","display","cursor","userSelect","href","onClick","Modal","onEscapeKeyDown","onHide","show","className","Header","closeButton","size","enforceFocus","autoFocus","aria-labelledby","centered","animation","Title","title","Body","text","Footer","border","Button","src","alt","map","user","key","subscriptions","sub","plan","label","months","toString","from","to","nextCharge","extraDays","debt","color","fontWeight","payments","nextUrl","replace","name","type","onChange","event","target","value","email","placeholder","variant","error","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.acececed.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment-timezone\";\nimport FA from \"react-fontawesome\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst localStorageKey = \"formDataInLocalStorage\";\n\nfunction formatDate(date) {\n  //return Intl.DateTimeFormat(\"gr-el\").format(new Date(date));\n\n  return moment(new Date(date)).tz(\"Europe/Athens\").format(\"DD/MM/YYYY\");\n}\n\nfunction App() {\n  const [showMainModal, setShowMainModal] = useState(null);\n\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [loginData, setLoginData] = useState(\n    JSON.parse(localStorage.getItem(localStorageKey))\n  );\n\n  const [modalData, setModalData] = useState(null);\n\n  const [formData, setFormData] = useState(null);\n  const [userData, setUserData] = useState(null);\n\n  if (showMainModal == null && window.location.search.substr(1).length > 5) {\n    setShowMainModal(true);\n  } else if (showMainModal == null) {\n    setShowMainModal(false);\n  }\n\n  useEffect(() => {\n    if (userData) {\n      let localStorageObject = {};\n      localStorageObject.auth = userData.auth;\n      localStorageObject.clentName =\n        userData[0].lname + \" \" + userData[0]?.fname;\n      localStorageObject.clentId = userData[0].id;\n\n      localStorage.setItem(localStorageKey, JSON.stringify(localStorageObject));\n      setLoginData(localStorageObject);\n    }\n  }, [userData]);\n\n  useEffect(() => {\n    async function loadUserData(auth) {\n      if (showMainModal) {\n        try {\n          console.log(\"Loaging Data...\");\n          const res = await axios(\n            //`https://spgapps.tk/exec/userData/auth=${auth}`\n            `https://spg.freemyip.com/exec/userData/auth=${auth}`\n          );\n          if (!res.errors) {\n            res.data.data.auth = auth;\n\n            setUserData(res.data.data);\n          } else {\n          }\n        } catch (error) {}\n      }\n    }\n\n    if (!loginData) {\n      var auth = window.location.search.substr(1);\n\n      if (!auth && auth.length < 5) {\n        auth = null;\n        setShowLoginForm(true);\n      }\n      if (auth && !userData) loadUserData(auth);\n    } else {\n      if (loginData.auth && !userData) loadUserData(loginData.auth);\n    }\n  }, [userData, loginData, showMainModal]);\n\n  const handleCloseSubModal = async () => {\n    if (modalData.callback) await modalData.callback();\n\n    setModalData(null);\n  };\n  const handleClose = () => setShowMainModal(false);\n\n  function handleChange(event) {\n    console.log(event.target.name, event.target.value);\n    setFormData({ ...formData, email: event.target.value });\n  }\n\n  return (\n    <>\n      <div\n        style={{ display: \"block\", cursor: \"pointer\", userSelect: \"none\" }}\n        href=\"/\"\n        onClick={() => {\n          setShowMainModal(!showMainModal);\n        }}\n      >\n        Η Συνδρομη μου\n      </div>\n\n      {showMainModal && (!loginData || userData) && (\n        <Modal\n          onEscapeKeyDown={handleClose}\n          onHide={handleClose}\n          show={showMainModal}\n          className=\"mainModal\"\n        >\n          <Modal.Header closeButton></Modal.Header>\n\n          <div className=\"container h-100 \">\n            {modalData && (\n              <Modal\n                className=\"iModal\"\n                show={modalData != null}\n                onHide={handleCloseSubModal}\n                size=\"md\"\n                enforceFocus={false}\n                autoFocus\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onEscapeKeyDown={handleCloseSubModal}\n                animation={false}\n              >\n                <Modal.Header>\n                  <Modal.Title>{modalData.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modalData.text}</Modal.Body>\n                <Modal.Footer style={{ border: \"0px\" }}>\n                  <Button className=\"modalButton\" onClick={handleCloseSubModal}>\n                    OK\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            )}\n\n            {loginData && loginData.auth && (\n              <div>\n                <div className=\"users\">\n                  <div className=\"d-flex justify-content-center\">\n                    <div className=\"brand_logo_container\">\n                      <img\n                        src=\"./images/logo150.png\"\n                        className=\"brand_logo\"\n                        alt=\"Logo\"\n                      />\n                    </div>\n                  </div>\n                  {userData &&\n                    userData.map((user) => (\n                      <div key={user.id} className=\"row\">\n                        <div className=\"col\">\n                          <div className=\"userName\">\n                            {user.lname} {user.fname}\n                          </div>\n\n                          <div className=\"userSubscriptions\">\n                            {user.subscriptions &&\n                              user.subscriptions.map((sub) => (\n                                <div key={sub.id} className=\"userSubscription\">\n                                  <div className=\"userSubscriptionHeader\">\n                                    {sub.plan.label +\n                                      \"  (\" +\n                                      (sub.plan.months === 1\n                                        ? \"Mηνιαία)\"\n                                        : sub.plan.months.toString() +\n                                          \" μήνες)\")}\n                                  </div>\n                                  <div className=\"userSubscriptionBody\">\n                                    Έναρξη Συνδρομής\n                                    <br /> {formatDate(sub.from)}\n                                    <br />\n                                    {sub.to && (\n                                      <>\n                                        Λήξη Συνδρομής\n                                        <br /> {formatDate(sub.to)}\n                                        <br />\n                                      </>\n                                    )}\n                                    {!sub.to && (\n                                      <>\n                                        Ανανέωση Συνδρομής\n                                        <br /> {formatDate(sub.nextCharge)}\n                                        <br />\n                                      </>\n                                    )}\n                                  </div>\n                                  {sub.extraDays && sub.extraDays > 0 && (\n                                    <div className=\"userSubscriptionFooter\">\n                                      Στην συνδρομή έχουν προστεθεί{\" \"}\n                                      {sub.extraDays} ημέρες χωρίς χρέωση\n                                    </div>\n                                  )}\n                                </div>\n                              ))}\n                            {!user.subscriptions && (\n                              <div className=\"userSubscription\">\n                                Δεν υπάρχουν συνδεομές\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"line\"></div>\n                          <div className=\"userPaymentInfo\">\n                            {user.debt && user.debt > 0 && (\n                              <>\n                                <span\n                                  style={{\n                                    color: \"darkred\",\n                                    fontWeight: \"bolder\",\n                                  }}\n                                >\n                                  Υπάρχουν οικονομικές εκκρεμότητες\n                                </span>\n                                <br />\n                                <small>\n                                  Παρακαλούμε επικοινωνήστε με το προσωπικό του\n                                  γυμναστήριου\n                                </small>\n                              </>\n                            )}\n                            {user.debt && user.debt <= 0 && (\n                              <>Δεν υπάρχουν οικονομικές εκκρεμότητες</>\n                            )}\n                          </div>\n\n                          <div className=\"userPayment\">\n                            {user.payments != null && user.payments.length > 0 && (\n                              <>\n                                Τελευταία Πλήρωμη\n                                <br />\n                                {formatDate(user.payments[0].date)}\n                              </>\n                            )}\n                            {!user.payments && <>Δεν υπάρχουν πληρωμές</>}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n\n                  <div className=\"usersFooter\">\n                    <a\n                      href=\"./\"\n                      onClick={() => {\n                        let nextUrl = window.location.href.replace(\n                          \"/?\" + loginData.auth,\n                          \"\"\n                        );\n                        if (window.location.href !== nextUrl)\n                          window.location = nextUrl;\n\n                        setUserData(null);\n\n                        localStorage.setItem(localStorageKey, null);\n                      }}\n                    >\n                      Δεν θέλω να με θυμάται ο browser.\n                    </a>\n                    &nbsp;Για να μπορέσω να δω τα στοιχεία της συνδρομής μου στο\n                    μέλλον, θα ακολουθήσω τον σύνδεσμο που μου έχει σταλεί στο\n                    email μου ή να αιτηθώ νέο.\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {showLoginForm && (\n              <div className=\"d-flex align-content-start flex-wrap justify-content-center h-100\">\n                <div className=\"user_card\">\n                  <div className=\"d-flex justify-content-center\">\n                    <div className=\"brand_logo_container\">\n                      <img\n                        src=\"./images/logo150.png\"\n                        className=\"brand_logo\"\n                        alt=\"Logo\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"d-flex justify-content-center align-items-center form_container\">\n                    <form>\n                      <div className=\"mt-4 mb-4\">\n                        <center>\n                          Για να συνδεθείς ακολούθησε τον\n                          <br />\n                          σύνδεσμο που σου στείλαμε με <br />\n                          email κατά την εγγραφή σου.\n                          <br />\n                          <br />\n                          Για να σου ξαναστείλουμε τον <br />\n                          σύνδεσμο, συμπλήρωσε το email <br />\n                          σου και πάτα «Αποστολή»\n                        </center>\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <div className=\"input-group-append\">\n                          <span className=\"input-group-text\">\n                            <FA name=\"envelope\" style={{ color: \"#f39c12\" }} />\n                          </span>\n                        </div>\n                        <input\n                          type=\"text\"\n                          name=\"email\"\n                          className=\"form-control input_email\"\n                          onChange={handleChange}\n                          value={formData ? formData.email : \"\"}\n                          placeholder=\"email\"\n                        />\n                      </div>\n\n                      <div className=\"d-flex justify-content-center mt-3 login_container\">\n                        <Button\n                          type=\"button\"\n                          name=\"button\"\n                          variant=\"primary\"\n                          className=\"btn login_btn\"\n                          onClick={async () => {\n                            if (formData) {\n                              let res = await axios(\n                                `https://spgapps.tk/x/b569b1afd005e5e1c843a89139d46d0527d44bd49f44a1d5242b791bd27d4faa/email=${formData.email}`\n                              );\n                              var data = res.data;\n\n                              if (data.errors) {\n                                setModalData({\n                                  title: \"Πρόβλημα\",\n                                  text: data.error,\n                                });\n                              } else {\n                                data = data.data;\n                                data.callback = () => {\n                                  formData.email = \"\";\n                                  setShowMainModal(false);\n                                };\n                                setModalData(data);\n                              }\n                            }\n                          }}\n                        >\n                          Αποστολή\n                        </Button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\n// function nextCharge(sub) {\n//   moment.tz.setDefault(\"Europe/Athens\");\n\n//   let plan = sub.plan;\n//   let from = moment(new Date(sub.from));\n\n//   from = from.add(sub.extraDays == null ? 0 : sub.extraDays, \"days\");\n\n//   if (sub.to != null && moment(sub.to).isBefore(Date.now())) {\n//     return null;\n//   } else {\n//     let to = moment(Date.now());\n\n//     let months =\n//       to.year() * 12 + to.month() - (from.year() * 12 + from.month());\n\n//     console.log(\"months\", months, to.month() + 1, from.month() + 1);\n\n//     if (to.date() >= from.date()) months++;\n\n//     let payPeriods = Math.floor(months / plan.months);\n\n//     if (payPeriods * plan.months < months) payPeriods++;\n\n//     return new Date(\n//       from.year(),\n//       from.month() + payPeriods * plan.months,\n//       from.date()\n//     );\n//   }\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}